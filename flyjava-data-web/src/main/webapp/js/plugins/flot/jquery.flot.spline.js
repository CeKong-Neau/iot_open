(function(F){function C(K,L,P,H,U,V,J){var W=Math.pow,Q=Math.sqrt,M,R,G,I,N,O,S,T;M=Q(W(P-K,2)+W(H-L,2));R=Q(W(U-P,2)+W(V-H,2));G=J*M/(M+R);I=J-G;N=P+G*(K-U);O=H+G*(L-V);S=P-I*(K-U);T=H-I*(L-V);return[N,O,S,T]}var E=[];function A(H,I,N,J,M){var L=F.color.parse(M);L.a=typeof J=="number"?J:0.3;L.normalize();L=L.toString();I.beginPath();I.moveTo(H[0][0],H[0][1]);var G=H.length;for(var K=0;K<G;K++){I[H[K][3]].apply(I,H[K][2])}I.stroke();I.lineWidth=0;I.lineTo(H[G-1][0],N);I.lineTo(H[0][0],N);I.closePath();if(J!==false){I.fillStyle=L;I.fill()}}function D(I,G,H,J){if(G===void 0||(G!=="bezier"&&G!=="quadratic")){G="quadratic"}G=G+"CurveTo";if(E.length==0){E.push([H[0],H[1],J.concat(H.slice(2)),G])}else{if(G=="quadraticCurveTo"&&H.length==2){J=J.slice(0,2).concat(H);E.push([H[0],H[1],J,G])}else{E.push([H[2],H[3],J.concat(H.slice(2)),G])}}}function B(J,M,P){if(P.splines.show!==true){return}var S=[],H=P.splines.tension||0.5,K,R,Q,I=P.datapoints.points,L=P.datapoints.pointsize,N=J.getPlotOffset(),O=I.length,G=[];E=[];if(O/L<4){F.extend(P.lines,P.splines);return}for(K=0;K<O;K+=L){R=I[K];Q=I[K+1];if(R==null||R<P.xaxis.min||R>P.xaxis.max||Q<P.yaxis.min||Q>P.yaxis.max){continue}G.push(P.xaxis.p2c(R)+N.left,P.yaxis.p2c(Q)+N.top)}O=G.length;for(K=0;K<O-2;K+=2){S=S.concat(C.apply(this,G.slice(K,K+6).concat([H])))}M.save();M.strokeStyle=P.color;M.lineWidth=P.splines.lineWidth;D(M,"quadratic",G.slice(0,4),S.slice(0,2));for(K=2;K<O-3;K+=2){D(M,"bezier",G.slice(K,K+4),S.slice(2*K-2,2*K+2))}D(M,"quadratic",G.slice(O-2,O),[S[2*O-10],S[2*O-9],G[O-4],G[O-3]]);A(E,M,J.height()+10,P.splines.fill,P.color);M.restore()}F.plot.plugins.push({init:function(G){G.hooks.drawSeries.push(B)},options:{series:{splines:{show:false,lineWidth:2,tension:0.5,fill:false}}},name:"spline",version:"0.8.2"})})(jQuery);